//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace BDHub.Models
{
    using System.Collections.Generic;
    using System.ComponentModel;
    using System.ComponentModel.DataAnnotations;
    using System.Numerics;

    public partial class CertUser
    {
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2214:DoNotCallOverridableMethodsInConstructors")]
        public CertUser()
        {
            this.Videos = new HashSet<Video>();
        }

        public int certUserID { get; set; }

        [DisplayName("Username")]
        [Required(ErrorMessage = "This field is required")]
        public string username { get; set; }

        [DisplayName("First name")]
        public string firstName { get; set; } = "";

        [DisplayName("Last name")]
        public string lastName { get; set; } = "";

        [Required(ErrorMessage = "This field is required")]
        public string password { get; set; }

        [DisplayName("E-mail")]
        public string email { get; set; }

        [DisplayName("Bethernum Account Address")]
        public string beternumAddress { get; set; } = "";

        public string LoginErrorMessage { get; set; }

        [DisplayName("BD Balance")]
        [DisplayFormat(DataFormatString = "{0:0.00000000000000000000}")]
        public decimal balance { get; set; } = -1;

        public string formattedBalance
        {
            get
            {
                if (this.beternumAddress.Equals(""))
                {
                    return "BDoken account not found.";
                }
                else if (this.balance == -1)
                {
                    return "Please check BDoken balance to display current amount.";
                }
                else
                    return this.balance.ToString("0.#####################")+" BD";
            }
        }
        
        public string bdokenPass { get; set; } = "";

        public string infoMessage { get; set; } = "";

        [DisplayFormat(DataFormatString = "{0:0.00000000000000000000}")]
        public decimal buyAmount { get; set; }

        [DisplayFormat(DataFormatString = "{0:0.00000000000000000000}")]
        public decimal sellAmount { get; set; }

        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<Video> Videos { get; set; }
    }
}
