@model BDHub.Models.CertUser
@{
    ViewBag.Title = "BDoken Settings";
}

<script type="text/javascript">
    var messageReceived = "@ViewBag.Message";
    if (!(messageReceived === ""))
        alert(messageReceived);
</script>

<h2>BDoken Settings</h2>

@using (Html.BeginForm("BuySell", "BDokenSettings", FormMethod.Post, new { id = Model.certUserID }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Details</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.certUserID)
        <div class="form-group">
            <div class="col-md-13">
                @Html.ActionLink("Create BDoken/ERC20 account", "CreateBDokenAcc", "BDokenSettings", new { @class = "btn btn-default" })
                <br /><br />
                @Html.ActionLink("Load BDoken/ERC20 account from existing keystore", "LoadBDokenAccount", "BDokenSettings", new { @class = "btn btn-default" })
                <br /><br />
                @Html.ActionLink("Show BDoken Data", "BDokenDetails", "BDokenSettings", new { @class = "btn btn-default" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.beternumAddress, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-13">
                @Html.DisplayFor(model => model.beternumAddress)
            </div>
        </div>

        <div class="form-group">
            @Html.Label("BDoken/ERC20 passphrase", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <input class="form-control text-box single-line" name="Passphrase" id="bdokenPass" type="password">
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Buy BDoken", htmlAttributes: new { @class = "control-label col-md-2" })

            <div class="col-md-10">
                @Html.EditorFor(model => model.buyAmount, new { htmlAttributes = new { @class = "form-control" } })
                <input type="submit" name="BuySubmit" value="Buy (1ETH = 1BD)" class="btn btn-default" />
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Sell BDoken", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.sellAmount, new { htmlAttributes = new { @class = "form-control" } })
                <input type="submit" name="SellSubmit" value="Sell (1BD = 0.1ETH)" class="btn btn-default" />
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-13">
                @Html.ActionLink("Check BDoken balance", "CheckBDokenBalance", "BDokenSettings", new { @class = "btn btn-default" })
                @Html.DisplayFor(model => model.formattedBalance)
            </div>
        </div>
    </div>
}