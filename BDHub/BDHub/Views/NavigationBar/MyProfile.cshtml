@model BDHub.Models.CertUser

@{
    ViewBag.Title = "My Profile";
}

<script type="text/javascript">
    var messageReceived = "@ViewBag.Message";
    if (!(messageReceived === ""))
        alert(messageReceived);
</script>

<link href="~/ContentCSS/InputPasswordOnMainPage.css" rel="stylesheet" />

<h2>My Profile</h2>

@using (Html.BeginForm("Edit", "NavigationBar", FormMethod.Post, new { id = "EditForm" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Details</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.certUserID)
        <div class="form-group">
            @Html.LabelFor(model => model.username, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-13">
                @Html.DisplayFor(model => model.username)
                @Html.ValidationMessageFor(model => model.username, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.firstName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.firstName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.firstName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.lastName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.lastName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.lastName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.email, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">

                @Html.EditorFor(model => model.email, new { htmlAttributes = new { @class = "form-control text-box single-line" } })
                @Html.ValidationMessageFor(model => model.email, "", new { @class = "text-danger" })

            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
                <br /><br />

                @Html.ActionLink("Change Password", "ChangePassword", "NavigationBar", new { @class = "btn btn-default" })
                <br />
            </div>
        </div>
    </div>
}
<div class="form-group">
    <div class="col-md-offset-2 col-md-10">
        <button name="Delete" id="Delete" class="btn btn-default" onclick='PopUp()' style="margin-left:-10px">Delete User</button>
    </div>
</div>

<div id="popupMyProfile">
    <p id="DoYou"></p>
    <br />
    <div style="margin-top:-10px">
        <button id="AcceptButton" class="btn btn-default" onclick="Accept()">OK</button>
        <button class="btn btn-default" onclick="Cancel()">Cancel</button>
    </div>
</div>

<script>
    var videosList = document.getElementsByClassName("form-group");
    var noOfVideos = videosList.length;

    function PopUp() {
        var doYou = document.getElementById("DoYou");
        doYou.innerHTML = 'Do you want to delete your BDHub account? \nBDoken/ERC20 account is in located in the keystore.';
        document.getElementById("popupMyProfile").style.display = "block";
        ChangePointerEvents("none");
    }

    function Accept() {
        document.getElementById("popupMyProfile").style.display = "none";
        window.location.href = "/NavigationBar/DeleteUser?Length=13";
        ChangePointerEvents("auto");
        return true;
    }

    function Cancel() {
        document.getElementById("popupMyProfile").style.display = "none";
        ChangePointerEvents("auto");
        return false;
    }

    function ChangePointerEvents(prop) {
        for (var i = 0; i < noOfVideos; i++) {
            videosList[i].style.pointerEvents = prop;
        }
    }
</script>
